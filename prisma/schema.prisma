datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // Aseg√∫rate de configurar esta variable en .env
}

generator client {
  provider = "prisma-client-js"
}
enum Rol {
  ADMIN
  PROFESOR
  REPRESENTANTE
  ESTUDIANTE
}


model Usuarios {
  id              Int      @id @default(autoincrement())
  cedula          String   @unique
  correo          String   @unique
  password        String
  rol             Rol   // Puede ser enum en el futuro
  sesionIniciada  Boolean  @default(false)
  profesor        Profesor?   @relation(fields: [profesorId], references: [id])
  profesorId      Int?
  isDeleted      Boolean @default(false)
  resetCode   String? 
  notificaciones  Notificacion[]
  

  Representantes Representantes[]
}

model Representantes {
  id                     Int          @id @default(autoincrement())
  nombre                 String
  apellido               String
  cedula                 String       @unique
  nacionalidad           String?
  ciudad                 String?
  correo                 String?
  direccion_Domicilio     String?
  foto                   String?
  numeroCelular1         String
  numeroCelular2         String?
  numeroCelular3         String?
  genero                 String
  cantidadRepresentados  Int          @default(0)
  personasNoAutorizadas  String?
  estudiantes            Estudiantes[]
  usuario               Usuarios?     @relation(fields: [usuarioId], references: [id])
  usuarioId             Int?
}

model Estudiantes {
  id                     Int          @id @default(autoincrement())
  nombre                 String
  cedula                 String       @unique
  genero                 String
  nacionalidad           String?
  fechaNacimiento        DateTime
  curso                  String
  edad                   Int
  problemasDiscapacidad  Boolean      @default(false)
  problemasSalud         String?
  tipoSangre             String?
  representanteId        Int?
  representante          Representantes? @relation(fields: [representanteId], references: [id])
  rendimiento            Rendimientos[]
}

model Profesor {
  id        Int         @id @default(autoincrement())
  nombre    String
  cedula    String      @unique
  actividades Actividad[]

  Usuarios Usuarios[]
}

model Cursos {
  id           Int        @id @default(autoincrement())
  nombreCurso  String
  actividades  Actividad[]
}

model Materias {
  id           Int        @id @default(autoincrement())
  nombreMateria String
  actividades  Actividad[]
}

model Actividad {
  id           Int         @id @default(autoincrement())
  nombre       String
  descripcion  String
  fecha        DateTime
  materiaId    Int
  cursoId      Int
  profesorId   Int?
  materia      Materias     @relation(fields: [materiaId], references: [id])
  curso        Cursos       @relation(fields: [cursoId], references: [id])
  profesor     Profesor?   @relation(fields: [profesorId], references: [id])
}

model Rendimientos {
  id           Int         @id @default(autoincrement())
  estudianteId Int
  tarea        String
  estado       String
  observaciones String?
  estudiante   Estudiantes  @relation(fields: [estudianteId], references: [id])
}

model Notificacion {
  id         Int     @id @default(autoincrement())
  usuarioId  Int
  mensaje    String
  fecha      DateTime
  usuario    Usuarios @relation(fields: [usuarioId], references: [id])
}
